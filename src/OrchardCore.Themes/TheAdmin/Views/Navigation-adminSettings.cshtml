@inject OrchardCore.Settings.ISiteService siteService
@using OrchardCore.Entities
@using OrchardCore.Admin.Models
@using OrchardCore.Navigation
@{
    var tag = Tag(Model, "ul");
    tag.AddCssClass("list-unstyled pb-3");

    tag.Attributes["Id"] = NavigationConstants.SiteSettingsId;

    foreach (var item in Model)
    {
        tag.InnerHtml.AppendHtml(await DisplayAsync(item));
    }
}

<div class="px-3">

    <div class="mb-3">
        <div class="d-flex align-items-center py-3 link-body-emphasis text-decoration-none border-bottom">
            <i class="fa-solid fa-gear pe-2"></i>
            <span class="fs-5 fw-semibold">@T["Settings"]</span>
        </div>
    </div>

    <div class="mb-3">
        <label for="SettingsSearch" class="form-label visually-hidden">@T["Search"]</label>
        <input type="text" class="form-control" id="SettingsSearch" name="SettingsSearch" value="" placeholder="@T["Search..."]" />
    </div>

    <div class="mb-3 d-none" id="SettingsSearchAlert">
        <div class="alert alert-info mb-0" role="alert">
            @T["No settings found"]
        </div>
    </div>

</div>

@tag

<script at="Foot">
    document.addEventListener('DOMContentLoaded', () => {
        let searchElement = document.getElementById('SettingsSearch');
        let menuElement = document.getElementById('@NavigationConstants.SiteSettingsId');
        let menuItemElements = menuElement.querySelectorAll('li');
        let parentMenuItemElements = menuElement.querySelectorAll('li.has-items');
        let alertContainer = document.getElementById('SettingsSearchAlert');

        const resetMenuItems = () => {

            for (let i = 0; i < menuItemElements.length; i++) {
                menuItemElements[i].classList.remove('d-none');
            }

            // Set the visibility of the parents.
            for (let i = 0; i < parentMenuItemElements.length; i++) {
                var parent = parentMenuItemElements[i];
                let containers = parent.querySelectorAll('.collapse');

                for (let x = 0; x < containers.length; x++) {
                    if(x == 0 && parent.classList.contains('active')) {
                        containers[x].classList.add('show');
                    } else {
                        containers[x].classList.remove('show');
                    }
                }
            }

            alertContainer.classList.add('d-none');
        };

        searchElement.addEventListener('keydown', (e) => {

            if (e.key === 'Escape') {
                searchElement.value = '';
                resetMenuItems();
            }
        });

        searchElement.addEventListener('keyup', (e) => {

            var value = e.target.value;

            if (!value) {
                resetMenuItems();

                return;
            }

            var foundOne = false;
            // Set the visibility of the children.
            for (let i = 0; i < menuItemElements.length; i++) {
                var item = menuItemElements[i];
                var searchText = item.getAttribute('data-searchable-text') || '';

                if (!searchText.includes(value)) {
                    item.classList.add('d-none');
                } else {
                    item.classList.remove('d-none');
                    foundOne = true;
                }
            }

            // Set the visibility of the parents.
            for (let i = 0; i < parentMenuItemElements.length; i++) {

                let containers = parentMenuItemElements[i].querySelectorAll('.collapse');

                for (let x = 0; x < containers.length; x++) {

                    let container = containers[x];
                    var visibleItems = container.querySelectorAll('li:not(.d-none)');

                    if (visibleItems.length) {
                        parentMenuItemElements[i].classList.remove('d-none');
                        container.classList.add('show');
                    } else {
                        parentMenuItemElements[i].classList.add('d-none');
                        container.classList.remove('show');
                    }
                }
            }

            if(!foundOne) {
                alertContainer.classList.remove('d-none');
            } else {
                alertContainer.classList.add('d-none');
            }
        });
    });
</script>

<style at="Head">

    .dropdown-toggle {
        outline: 0;
    }

    .menu-admin-settings .icon {
        margin-right: 0.25rem !important
    }

    .btn-toggle {
        padding: .25rem .5rem;
        font-weight: 600;
        color: var(--bs-emphasis-color);
        background-color: transparent;
    }

        .btn-toggle:hover,
        .btn-toggle:focus {
            color: rgba(var(--bs-emphasis-color-rgb), .85);
            background-color: var(--bs-tertiary-bg);
        }

        .btn-toggle::before {
            width: 1.25em;
            line-height: 0;
            content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
            transition: transform .35s ease;
            transform-origin: .5em 50%;
        }

    [data-bs-theme="dark"] .btn-toggle::before {
        content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%28255,255,255,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
    }

    .btn-toggle[aria-expanded="true"] {
        color: rgba(var(--bs-emphasis-color-rgb), .85);
    }

        .btn-toggle[aria-expanded="true"]::before {
            transform: rotate(90deg);
        }

    .btn-toggle-nav a, .settings-link > a {
        padding: .1875rem .5rem;
        margin-top: .125rem;
        margin-left: 1.25rem;
    }

        .btn-toggle-nav a:hover,
        .btn-toggle-nav a:focus {
            background-color: var(--bs-tertiary-bg);
        }
</style>