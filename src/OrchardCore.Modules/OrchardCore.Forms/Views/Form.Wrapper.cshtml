@using Microsoft.AspNetCore.Html
@using Microsoft.Extensions.Options
@using OrchardCore.Forms.Models
@using OrchardCore.Mvc.Utilities
@using OrchardCore.Secrets.Options
@using OrchardCore.Workflows.Http
@using OrchardCore.Workflows.Http.Models

@inject IOptions<SecretOptions> SecretOptions

@{
    var formPart = ((ContentItem)Model.ContentItem).As<FormPart>();
    var encType = formPart.Method == "POST" ? formPart.EncType : string.Empty;
    var formContentTypeClassName = "form-" + ((string)Model.ContentItem.ContentType).HtmlClassify();

    var elementId = ((ContentItem)Model.ContentItem).As<FormElementPart>()?.Id;
    var formId = string.IsNullOrWhiteSpace(elementId) ? $"form_{Model.ContentItem.ContentItemId}" : elementId;

    var action = formPart.Action;
    if (!String.IsNullOrEmpty(formPart.ActionSecret) && SecretOptions.Value.SecretTypes.Contains(typeof(HttpRequestEventSecret)))
    {
        action = await Url.GetHttpRequestEventUrlAsync(formPart.ActionSecret);
    }
}

<form id="@formId" action="@action" method="@formPart.Method" enctype="@encType" class="form-content @formContentTypeClassName">
    @if (formPart.EnableAntiForgeryToken)
    {
        @Html.AntiForgeryToken()
    }

    @await DisplayAsync((IHtmlContent)Model.Metadata.ChildContent)
</form>
