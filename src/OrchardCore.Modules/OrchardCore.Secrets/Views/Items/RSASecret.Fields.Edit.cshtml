@model RsaSecretViewModel

<div class="mb-3" asp-validation-class-for="KeyType">
    <div class="w-100 w-md-50">
        <label asp-for="KeyType">@T["Key Type"]</label>
        <select asp-for="KeyType" asp-items="@Model.KeyTypes" class="form-control" asp-validation-class-for="KeyType"></select>
        <span asp-validation-for="KeyType"></span>
    </div>
    <div class="w-100">
        <span class="hint">@T["Select the rsa key type. A public key can only be used for decryption."]</span>
    </div>
</div>

<div id="currentKeyPair" data-isnew="@Model.Context.IsNew">
    <div class="public-key mb-3" asp-validation-class-for="PublicKey">
        <label asp-for="PublicKey">@T["Public Key"]</label>
        @if (Model.Context.IsNew || Model.KeyType == RSAKeyType.Public)
        {
            <textarea asp-for="PublicKey" class="form-control" rows="5"></textarea>
        }
        else
        {
            <textarea asp-for="PublicKey" class="form-control" rows="5" readonly></textarea>
        }
        <span asp-validation-for="PublicKey"></span>
        <span class="hint">@T["The public key in base64 url encoded format."]</span>

    </div>
    @if (!String.IsNullOrEmpty(Model.PrivateKey))
    {
        <div class="private-key mb-3" asp-validation-class-for="PrivateKey">
            <label asp-for="PrivateKey">@T["Private Key"]</label>
            <textarea asp-for="PrivateKey" class="form-control" rows="10"></textarea>
            <span asp-validation-for="PrivateKey"></span>
            <span class="hint">@T["The private key in base64 url encoded format. Once created this key will never be displayed again."]</span>
        </div>
    }
    @if (!Model.Context.IsNew)
    {
        <button class="btn btn-secondary float-end" id="regenerateKeyPair" type="button">@T["Regenerate Key Pair"]</button>
    }

</div>

@if (!Model.Context.IsNew)
{
    <div id="newKeyPair" style="display: none">
        <input asp-for="HasNewKeys" type="hidden" />
        <div class="public-key mb-3" asp-validation-class-for="NewPublicKey">
            <label asp-for="NewPublicKey">@T["Public Key"]</label>
            <textarea asp-for="NewPublicKey" class="form-control" rows="5"></textarea>
            <span asp-validation-for="NewPublicKey"></span>
            <span class="hint">@T["The public key in base64 url encoded format."]</span>

        </div>
        <div class="private-key mb-3" asp-validation-class-for="NewPrivateKey">
            <label asp-for="NewPrivateKey">@T["Private Key"]</label>
            <textarea asp-for="NewPrivateKey" class="form-control" rows="10"></textarea>
            <span asp-validation-for="NewPrivateKey"></span>
            <span class="hint">@T["The private key in base64 url encoded format. Once created this key will never be displayed again."]</span>
        </div>
    </div>
}

<script at="Foot">
    $(function () {
        var isNew = $('#currentKeyPair').data('isnew') == 'True';
        $('#regenerateKeyPair').click(function () {
            $('#@Html.IdFor(m => m.HasNewKeys)').prop('value', true);
            $('#currentKeyPair').hide();
            $('#newKeyPair').show();
        });

        $('#@Html.IdFor(m => m.KeyType)').on('change', function () {
            if (this.value === '@RSAKeyType.PublicPrivatePair') {
                if (isNew) {
                    $('#@Html.IdFor(m => m.PrivateKey)').closest('.private-key').show();
                } else {
                    $('#regenerateKeyPair').show();
                    $('#@Html.IdFor(m => m.PublicKey)').attr('readonly', true);
                }
            } else {
                $('#regenerateKeyPair').hide();
                if (isNew) {
                    $('#@Html.IdFor(m => m.PrivateKey)').closest('.private-key').hide();
                }
                $('#@Html.IdFor(m => m.PublicKey)').closest('.public-key').show();
                $('#@Html.IdFor(m => m.PublicKey)').attr('readonly', false);
            }
        });
    });
</script>
