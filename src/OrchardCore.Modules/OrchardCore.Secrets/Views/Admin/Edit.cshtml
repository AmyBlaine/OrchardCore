@model SecretInfoViewModel

<zone Name="Title"><h1>@RenderTitleSegments(T["Edit Secret"])</h1></zone>

<div asp-validation-summary="All"></div>
<form asp-action="Edit" method="post">

    <input type="hidden" value="@Model.Name" name="sourceName" />

    <div class="mb-3" asp-validation-class-for="Name">
        <label asp-for="Name">@T["Name"]</label>
        <input asp-for="Name" class="form-control" autofocus required readonly />
        <span asp-validation-for="Name"></span>
        <span class="hint">@T["The name of the secret."]</span>
    </div>

    <div class="mb-3" asp-validation-class-for="Description">
        <label asp-for="Description">@T["Description"]</label>
        <input asp-for="Description" class="form-control" autofocus />
        <span class="hint">@T["The description of the secret."]</span>
    </div>

    @if (Model.StoreInfos.Count > 0)
    {
        <div class="mb-3 w-md-50" asp-validation-class-for="SelectedStore">
            <label asp-for="SelectedStore">@T["Store"]</label>
            <select class="form-control" asp-for="SelectedStore">
                @foreach (var storeEntry in Model.StoreInfos)
                {
                    <option value="@storeEntry.Name" selected="@(Model.SelectedStore == storeEntry.Name)" data-isReadOnly="@storeEntry.IsReadOnly">@storeEntry.DisplayName</option>
                }
            </select>
            <span class="hint">@T["The store where the secret value is stored."]</span>
        </div>
    }
    else
    {
        <p class="alert alert-danger">@T["There are no Secret Stores enabled. Please enable a Secret store Feature."]</p>
    }

    @if (Model.Editor != null)
    {
        @await DisplayAsync(Model.Editor)
    }

    <div class="mb-3">
        <button class="btn btn-primary" type="submit">@T["Save"]</button>
        <a class="btn btn-secondary" asp-route-action="Index">@T["Cancel"]</a>
    </div>
</form>
