@model EditRemoteInstanceViewModel

<zone Name="Title"><h1>@RenderTitleSegments(T["Create Remote Instance"])</h1></zone>

<div asp-validation-summary="ModelOnly"></div>
<form asp-action="Create" method="post" class="no-multisubmit">
    <div class="mb-3" asp-validation-class-for="Name">
        <label asp-for="Name">@T["Name"]</label>
        <input asp-for="Name" class="form-control" autofocus />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3" asp-validation-class-for="Url">
        <label asp-for="Url">@T["Url"]</label>
        <input asp-for="Url" class="form-control" />
        <span asp-validation-for="Url" class="text-danger"></span>
    </div>

    <div class="mb-3" asp-validation-class-for="ClientName">
        <label asp-for="ClientName">@T["Client Name"]</label>
        <input asp-for="ClientName" class="form-control" />
        <span asp-validation-for="ClientName" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <div asp-validation-class-for="ApiKeySecret">
            <label asp-for="ApiKeySecret">@T["Api Key Secret"]</label>
            @await Component.InvokeAsync(
            "SelectSecret",
            new
            {
            secretType = "TextSecret",
            selectedSecret = Model.ApiKeySecret,
            htmlId = Html.IdFor(m => m.ApiKeySecret),
            htmlName = Html.NameFor(m => m.ApiKeySecret),
            required  = false,
            })
            <span asp-validation-for="ApiKeySecret"></span>
            <span class="hint">@T["The api key secret."]</span>
        </div>

        <div class="mt-1 plain-text" asp-validation-class-for="ApiKey">
            @* <label asp-for="ApiKey">@T["Api Key"]</label> *@
            <input asp-for="ApiKey" type="password" class="form-control" />
            <span asp-validation-for="ApiKey" class="text-danger"></span>
            <span class="hint">@T["The plain text api key."]</span>
        </div>
    </div>

    <div class="mb-3" asp-validation-class-for="RsaEncryptionSecret">
        <label asp-for="RsaEncryptionSecret">@T["RSA encryption secret"]</label>
        @await Component.InvokeAsync(
        "SelectSecret",
        new
        {
        secretType = "RsaSecret",
        selectedSecret = Model.RsaEncryptionSecret,
        htmlId = Html.IdFor(m => m.RsaEncryptionSecret),
        htmlName = Html.NameFor(m => m.RsaEncryptionSecret),
        required = false,
        })
        <span asp-validation-for="RsaEncryptionSecret"></span>
        <span class="hint">@T["The secret to use when a deployment step encrypts data for transmission to this remote instance."]</span>
        <span class="hint">@T["Note: The public key is used for encryption, the remote instance must have the matching private key."]</span>
    </div>

    <div class="mb-3" asp-validation-class-for="RsaSigningSecret">
        <label asp-for="RsaSigningSecret">@T["RSA signing secret"]</label>
        @await Component.InvokeAsync(
        "SelectSecret",
        new
        {
        secretType = "RsaSecret",
        selectedSecret = Model.RsaSigningSecret,
        htmlId = Html.IdFor(m => m.RsaSigningSecret),
        htmlName = Html.NameFor(m => m.RsaSigningSecret),
        required = false,
        })
        <span asp-validation-for="RsaSigningSecret"></span>
        <span class="hint">@T["The secret to use when a deployment step signs encrypted data for transmission to this remote instance."]</span>
        <span class="hint">@T["Note: The private key is used for signing, the remote instance must have the matching public key."]</span>
    </div>

    <div class="mb-3">
        <button class="btn btn-primary create" type="submit">@T["Create"]</button>
        <a class="btn btn-secondary cancel" role="button" asp-route-action="Index">@T["Cancel"]</a>
    </div>

</form>

<script at="Foot">
    $(function () {
        $('#@Html.IdFor(m => m.ApiKeySecret)').on('change', function () {
            if (this.value === '') {
                $('#@Html.IdFor(m => m.ApiKey)').closest('.plain-text').show();
                $('#@Html.IdFor(m => m.ApiKeySecret)').siblings('.hint').hide();
            } else {
                $('#@Html.IdFor(m => m.ApiKey)').closest('.plain-text').hide();
                $('#@Html.IdFor(m => m.ApiKeySecret)').siblings('.hint').show();
            }
        }).trigger('change');
    });
</script>
